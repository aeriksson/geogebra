BarCode.Syntax=[ ]\n[ <Image> ]\n[ <Text or Number>, "<Format (optional)>", "<Error Correction (optional)>", <Width (optional)>, <Height (optional)> ]
Circle.Syntax3D=[ <Point>, <Radius Number> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Line>, <Point> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Radius>, <Direction> ]\n[ <Point>, <Point>, <Direction> ]
Command=\u05e4\u05e7\u05d5\u05d3\u05d4
ContingencyTable.Syntax=[ <List of Text>, <List of Text> ]\n[ <List of Text>, <List of Text>, <Options> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table>, <Options> ]
Cube.Syntax=[ <Point>, <Point>, <Direction> ]
Dodecahedron.Syntax=[ <Point>, <Point>, <Direction> ]
Function.Syntax=[ <List of Numbers> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
GetTime.Syntax=[ ]\n[ "<Format>" ]
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
Icosahedron.Syntax=[ <Point>, <Point>, <Direction> ]
ImplicitCurve.Syntax=[ <List of Points> ]\n[ <f(x\u201a y)> ]
ImplicitDerivative.Syntax=[ <f(x\u201a y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x\u201a y)> ]\n[ <Expression>, <Dependent Variable>, <Independent Variable> ]
Locus.Syntax=[ <Point Creating Locus Line>, <Point> ]\n[ <Point Creating Locus Line>, <Slider> ]\n[ <Slopefield>, <Point> ]\n[ <f(x\u201a y)>, <Point> ]
Octahedron.Syntax=[ <Point>, <Point>, <Direction> ]
Point.Syntax=[ <Object> ]\n[ <List> ]\n[ <Object>, <Parameter> ]\n[ <Point>, <Vector> ]
Product.Syntax=[ <List of Numbers> ]\n[ <List of Numbers>, <Number of Elements> ]
Product.SyntaxCAS=[ <List of expressions> ]\n[ <Expression>, <variable>, <start index>, <end index> ]
ShowAxes.Syntax=[ ]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowGrid.Syntax=[ ]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
SlopeField.Syntax=[ <f(x\u201a y)> ]\n[ <f(x\u201a y)>, <Number n> ]\n[ <f(x\u201a y)>, <Number n>, <Length Multiplier a> ]\n[ <f(x\u201a y)>, <Number n>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SolveODE.Syntax=[ <f\u2032(x\u201a y)> ]\n[ <f\u2032(x\u201a y)>, <Point on f> ]\n[ <f\u2032(x\u201a y)>, <Start x>, <Start y>, <End x>, <Step> ]\n[ <y\u2032>, <x\u2032>, <Start x>, <Start y>, <End t>, <Step> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y\u2032>, <End x>, <Step> ]
SolveODE.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Dependent Variable>, <Independent Variable> ]
Sphere.Syntax=[ <Point>, <Radius Number> ]
Take.Syntax=[ <List>, <Start Position> ]\n[ <Text>, <Start Position> ]\n[ <List>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position>, <End Position> ]
Tetrahedron.Syntax=[ <Point>, <Point>, <Direction> ]
Turtle.Syntax=[ ]
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]